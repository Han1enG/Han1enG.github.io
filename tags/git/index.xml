<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on Cold World</title>
    <link>http://coldcoding.top/tags/git/</link>
    <description>Recent content in Git on Cold World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>hanlengcold@gmail.com (Cold)</managingEditor>
    <webMaster>hanlengcold@gmail.com (Cold)</webMaster>
    <lastBuildDate>Tue, 30 May 2023 18:55:31 +0800</lastBuildDate>
    <atom:link href="http://coldcoding.top/tags/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git 基础命令</title>
      <link>http://coldcoding.top/tech/git/git-base/</link>
      <pubDate>Tue, 30 May 2023 18:55:31 +0800</pubDate><author>hanlengcold@gmail.com (Cold)</author>
      <guid>http://coldcoding.top/tech/git/git-base/</guid>
      <description>Git 环境搭建 安装 Git 添加 SSH key 创建 ssh key 1$ ssh-keygen -t rsa -C &amp;#34;cold@google.com&amp;#34; 克隆代码库报错，查看调试信息 1$ ssh -vv -p 29418 [git服务器IP地址] 验证 publickey 时，本地提供了私钥/home/user/.ssh/id_rsa，但是 no mutual signature algorithm 无互签名算法，尝试 ed25529 等算法但是没有匹配的认证方式。 解决办法是提供 ecdsa,ed25519,dsa 等算法的公钥和私钥对。 查看当前 OpenSSH 版本： 1$ ssh -V [git服务器IP地址] OpenSSH 8.8 考虑到cryptographically broken，开始禁用了使用SHA-1哈希算法的RSA签名算法。 这是一个客户端限制，我们必须提供能被OpenSSH 8.8认可的密钥类型，比如 OpenSSH 推荐的Ed25519。&#xA;使用 Ed25519 算法 1# 生成ed25519密钥 2$ ssh-keygen -t ed25519 -C &amp;#34;your_email@example.com&amp;#34; 3# 将私钥添加到身份验证代理 4$ ssh-add Git 拉取远程指定分支到本地 1 将远程指定分支拉取到本地指定分支上： 1$ git pull origin 远程分支名:本地分支名 将远程指定分支拉取到本地当前分支上： 1$ git pull origin 远程分支名 将与本地当前分支同名的远程分支拉取到本地当前分支上(需先关联远程分支): 1$ git pull 将本地分支与远程同名分支相关联 1$ git push -u origin 远程分支名 Git 本地推送到远程指定分支 将本地当前分支推送到远程指定分支上（注意：pull 是远程在前本地在后，push 相反）： 1$ git push origin 本地分支名:远程分支名 将本地当前分支推送到与本地当前分支同名的远程分支上 1$ git push origin 本地分支名 3.</description>
    </item>
    <item>
      <title>利用Github分支备份Hexo博客源文件</title>
      <link>http://coldcoding.top/tech/blog/hexo/hexo_backup/</link>
      <pubDate>Fri, 03 Mar 2023 21:41:58 +0000</pubDate><author>hanlengcold@gmail.com (Cold)</author>
      <guid>http://coldcoding.top/tech/blog/hexo/hexo_backup/</guid>
      <description>前言 虽然Hexo部署博客很方便，但是当我们更换电脑时呢，在github中的其实只是在我们本地目录里的.deploy_git里面的内容，显然我们需要把源文件备份push到github上，这样只需要克隆到本地，简单配置后就可以了。&#xA;备份 新建分支 在Github上的博客仓库下创建一个新的分支hexo，并且将这个分支设置为默认分支&#xA;克隆hexo分支 1$ git clone git@...git #(github page 的仓库地址) 把克隆下来的文件夹中的.git文件复制到博客根目录下，如果没有找到.git文件，其实是被隐藏了 开始备份 进入到博客的根目录下Git Bash&#xA;1$ git add . 2$ git commit -m &amp;#34;Backup&amp;#34; 3$ git push origin hexo 此时可以在Github上发现完成备份。 之后每次在更改后，可以执行以下命令：&#xA;1$ hexo clean 2$ git add . 3$ git commit -m &amp;#34;backup&amp;#34; 4$ git push 5$ hexo g -d 本地恢复 换一台电脑，配置好 Hexo 的环境，配置 Git SSH key，把博客源文件代码克隆下来:&#xA;1$ git clone git@...git # (github page 的仓库地址) 克隆后，默认分支是 master，需要切换到hexo分支（省略）&#xA;1$ git branch -a # 查看所有分支 2$ git checkout origin/hexo # 切换到xxx分支 执行如下命令</description>
    </item>
  </channel>
</rss>
