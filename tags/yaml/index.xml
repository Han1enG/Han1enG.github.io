<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Yaml on Cold World</title>
    <link>http://coldcoding.top/tags/yaml/</link>
    <description>Recent content in Yaml on Cold World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>hanlengcold@gmail.com (Cold)</managingEditor>
    <webMaster>hanlengcold@gmail.com (Cold)</webMaster>
    <lastBuildDate>Wed, 28 Feb 2024 22:52:10 +0800</lastBuildDate>
    <atom:link href="http://coldcoding.top/tags/yaml/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>解析 Yaml 文件失败使用默认值替换失败字段</title>
      <link>http://coldcoding.top/tech/golang/unmarshal-yaml-with-default-value/</link>
      <pubDate>Wed, 28 Feb 2024 22:52:10 +0800</pubDate><author>hanlengcold@gmail.com (Cold)</author>
      <guid>http://coldcoding.top/tech/golang/unmarshal-yaml-with-default-value/</guid>
      <description>场景 当 Yaml 作为配置文件时候，往往在启动服务的时候就需要解析配置，如果修改了某个字段的数据结构，开局就 panic，有时候我们并不希望此时就停止业务，希望能用默认的配置文件替代。&#xA;1# cfg.yaml 2language: Golang 3animal: Dog 1type Cfg struct { 2&#x9;Language string `json:&amp;#34;language,omitempty&amp;#34;` 3&#x9;Animal string `json:&amp;#34;animal,omitempty&amp;#34;` 4} 正常情况下，Yaml 文件会被解析成功，如下：&#xA;1package main 2 3import ( 4&#x9;&amp;#34;fmt&amp;#34; 5&#x9;&amp;#34;os&amp;#34; 6 7&#x9;&amp;#34;github.com/goccy/go-yaml&amp;#34; 8) 9 10type Cfg struct { 11&#x9;Language string `json:&amp;#34;language,omitempty&amp;#34;` 12&#x9;Animal string `json:&amp;#34;animal,omitempty&amp;#34;` 13} 14 15func main() { 16&#x9;CfgPath := &amp;#34;C:\\Users\\han1en9\\Desktop\\Project\\Demo\\cfg.yaml&amp;#34; 17 18&#x9;var cfg Cfg 19&#x9;b, _ := os.</description>
    </item>
  </channel>
</rss>
